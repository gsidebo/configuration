---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for role edx-video-pipeline
#


#
# vars are namespace with the module name.
#
video_pipeline_service_name: "pipeline"
video_pipeline_gunicorn_port: 8555

video_pipeline_user: "{{ video_pipeline_service_name }}"
video_pipeline_home: "{{ COMMON_APP_DIR }}/{{ video_pipeline_service_name }}"

# TODO! Find some better way to do the below
video_pipeline_service_home: "{{ COMMON_APP_DIR }}/{{ video_pipeline_service_name }}"
video_pipeline_code_dir: "{{ video_pipeline_service_home }}/{{ video_pipeline_service_name }}"
video_pipeline_venv_dir: "{{ video_pipeline_service_home }}/venvs/{{ video_pipeline_service_name }}"

video_pipeline_ingest_worker: "{{ video_pipeline_service_name }}_ingest"
video_pipeline_deliver_worker: "{{ video_pipeline_service_name }}_deliver"

#
# OS packages
#

video_pipeline_debian_pkgs:
  - libffi6
  - libffi-dev

VIDEO_PIPELINE_NGINX_PORT: "1{{ video_pipeline_gunicorn_port }}"
VIDEO_PIPELINE_SSL_NGINX_PORT: "4{{ video_pipeline_gunicorn_port }}"

VIDEO_PIPELINE_DEFAULT_DB_NAME: "pipeline"
VIDEO_PIPELINE_MYSQL: "localhost"
# MySQL usernames are limited to 16 characters
VIDEO_PIPELINE_MYSQL_USER: "pipeline001"
VIDEO_PIPELINE_MYSQL_PASSWORD: "password"

VIDEO_PIPELINE_MEMCACHE: []

VIDEO_PIPELINE_VERSION: "master"
VIDEO_PIPELINE_DJANGO_SETTINGS_MODULE: "VEDA.settings"
VIDEO_PIPELINE_DOMAIN: 'pipeline'
VIDEO_PIPELINE_URL_ROOT: "http://{{ VIDEO_PIPELINE_DOMAIN }}:{{ VIDEO_PIPELINE_NGINX_PORT }}"
VIDEO_PIPELINE_LOGOUT_URL: "{{ VIDEO_PIPELINE_URL_ROOT }}/logout/"

VIDEO_PIPELINE_SECRET_KEY: "Your secret key here"
VIDEO_PIPELINE_LANGUAGE_CODE: "en-us"

# Used to automatically configure OAuth2 Client
VIDEO_PIPELINE_SOCIAL_AUTH_EDX_OIDC_KEY : "pipeline-key"
VIDEO_PIPELINE_SOCIAL_AUTH_EDX_OIDC_SECRET : "pipeline-secret"
VIDEO_PIPELINE_SOCIAL_AUTH_REDIRECT_IS_HTTPS: false

VIDEO_PIPELINE_DATA_DIR: "{{ COMMON_DATA_DIR }}/{{ video_pipeline_service_name }}"
VIDEO_PIPELINE_MEDIA_ROOT: "{{ VIDEO_PIPELINE_DATA_DIR }}/media"
VIDEO_PIPELINE_MEDIA_URL: "/media/"

VIDEO_PIPELINE_MEDIA_STORAGE_BACKEND:
  DEFAULT_FILE_STORAGE: "django.core.files.storage.FileSystemStorage"
  MEDIA_ROOT: "{{ VIDEO_PIPELINE_MEDIA_ROOT }}"
  MEDIA_URL: "{{ VIDEO_PIPELINE_MEDIA_URL }}"

VIDEO_PIPELINE_ENVIRONMENT:
  VIDEO_PIPELINE_CFG: "{{ COMMON_CFG_DIR }}/{{ video_pipeline_service_name }}.yml"

VIDEO_PIPELINE_SERVICE_USER: 'pipeline_service_user'

VIDEO_PIPELINE_STATICFILES_STORAGE: "django.contrib.staticfiles.storage.StaticFilesStorage"

VIDEO_PIPELINE_HOSTNAME: '~^((stage|prod)-)?pipeline.*'

NGINX_VIDEO_PIPELINE_GUNICORN_HOSTS:
  - 127.0.0.1

VIDEO_PIPELINE_GUNICORN_EXTRA: ""

VIDEO_PIPELINE_EXTRA_APPS: []

# See edx_django_service_automated_users for an example of what this should be
VIDEO_PIPELINE_AUTOMATED_USERS: {}

# static files settings
VIDEO_PIPELINE_DATA_DIR: '{{ COMMON_DATA_DIR }}/{{ video_pipeline_service_name }}'
VIDEO_PIPELINE_STATIC_ROOT: '{{ VIDEO_PIPELINE_DATA_DIR }}/staticfiles'

# video pipeline config overrides

VIDEO_PIPELINE_EDX_CLOUDFRONT_PREFIX: "SET-ME-PLEASE"
VIDEO_PIPELINE_EDX_S3_INGEST_PREFIX: "ingest/"
VIDEO_PIPELINE_EDX_S3_INGEST_BUCKET: "SET-ME-PLEASE"
VIDEO_PIPELINE_EDX_S3_ENDPOINT_BUCKET: "SET-ME-PLEASE"
VIDEO_PIPELINE_VEDA_S3_UPLOAD_BUCKET: "SET-ME-PLEASE"
VIDEO_PIPELINE_VEDA_UPLOAD_BUCKET: "SET-ME-PLEASE"
VIDEO_PIPELINE_VEDA_S3_HOTSTORE_BUCKET: "SET-ME-PLEASE"
VIDEO_PIPELINE_VEDA_DELIVERABLE_BUCKET: "SET-ME-PLEASE"

VIDEO_PIPELINE_VEDA_BASE_URL: "{{ VIDEO_PIPELINE_URL_ROOT }}"
VIDEO_PIPELINE_VEDA_ACCESS_KEY_ID: "SET-ME-PLEASE"
VIDEO_PIPELINE_VEDA_SECRET_ACCESS_KEY: "SET-ME-PLEASE"

VIDEO_PIPELINE_AWS_VIDEO_IMAGES_BUCKET: "SET-ME-PLEASE"
VIDEO_PIPELINE_AWS_VIDEO_TRANSCRIPTS_BUCKET: "SET-ME-PLEASE"

VIDEO_PIPELINE_ADMIN_EMAIL: "veda@example.com"
VIDEO_PIPELINE_VEDA_NOREPLY_EMAIL: "veda-noreply@example.com"

VIDEO_PIPELINE_CIELO24_API_ENVIRONMENT: "sandbox"
VIDEO_PIPELINE_TRANSCRIPT_PROVIDER_REQUEST_TOKEN: "SET-ME-TO-A-UNIQUE-LONG-RANDOM-STRING"

VIDEO_PIPELINE_VEDA_API_URL: "{{ VIDEO_PIPELINE_VEDA_BASE_URL }}/api"
VIDEO_PIPELINE_VEDA_AUTH_URL: "{{ VIDEO_PIPELINE_VEDA_BASE_URL }}/veda_auth"
VIDEO_PIPELINE_VEDA_CLIENT_ID: "SET-ME-PLEASE"
VIDEO_PIPELINE_VEDA_SECRET_KEY: "SET-ME-PLEASE"
VIDEO_PIPELINE_VEDA_TOKEN_URL: "{{ VIDEO_PIPELINE_VEDA_BASE_URL }}/o/token"

VIDEO_PIPELINE_VAL_BASE_URL: "http://127.0.0.1:8010"
VIDEO_PIPELINE_VAL_API_URL: "{{ VIDEO_PIPELINE_VAL_BASE_URL }}/api/val/v0/videos"
VIDEO_PIPELINE_VAL_TOKEN_URL: "{{ VIDEO_PIPELINE_VAL_BASE_URL }}/oauth2/access_token"
VIDEO_PIPELINE_VAL_VIDEO_IMAGES_URL: "{{ VIDEO_PIPELINE_VAL_BASE_URL }}/api/val/v0/videos/video-images/update/"
VIDEO_PIPELINE_VAL_CLIENT_ID: "SET-ME-PLEASE"
VIDEO_PIPELINE_VAL_SECRET_KEY: "SET-ME-PLEASE"
VIDEO_PIPELINE_VAL_USERNAME: "staff"
VIDEO_PIPELINE_VAL_PASSWORD: "edx"
VIDEO_PIPELINE_VAL_TRANSCRIPT_CREATE_URL: "{{ VIDEO_PIPELINE_VAL_BASE_URL }}/api/val/v0/videos/video-transcripts/create/"
VIDEO_PIPELINE_VAL_VIDEO_TRANSCRIPT_STATUS_URL: "{{ VIDEO_PIPELINE_VAL_BASE_URL }}/api/val/v0/videos/status/"

VIDEO_PIPELINE_RABBITMQ_BROKER: "localhost"
VIDEO_PIPELINE_RABBITMQ_PASS: "pipeline"
VIDEO_PIPELINE_RABBITMQ_USER: "pipeline"

VIDEO_PIPELINE_SG_SERVER_PATH: "SET-ME-PLEASE"
VIDEO_PIPELINE_SG_SCRIPT_NAME: "SET-ME-PLEASE"
VIDEO_PIPELINE_SG_SCRIPT_KEY: "SET-ME-PLEASE"

VIDEO_PIPELINE_THREEPLAY_FTPHOST: "SET-ME-PLEASE"

VIDEO_PIPELINE_XUETANG_API_URL: "SET-ME-PLEASE"
VIDEO_PIPELINE_XUETANG_API_SHARED_SECRET: "SET-ME-PLEASE"

# video pipeline config

VIDEO_PIPELINE_CONFIG:
  DATABASES:
      default:
          ENGINE: 'django.db.backends.mysql'
          NAME: '{{ VIDEO_PIPELINE_DEFAULT_DB_NAME }}'
          USER: '{{ VIDEO_PIPELINE_MYSQL_USER }}'
          PASSWORD: '{{ VIDEO_PIPELINE_MYSQL_PASSWORD }}'
          HOST: '{{ VIDEO_PIPELINE_MYSQL }}'
          PORT: 3306

  django_secret_key: '{{ VIDEO_PIPELINE_SECRET_KEY }}'

  # Django DEBUG global
  debug: false

  # django staticfile settings
  STATIC_ROOT_PATH: '{{ VIDEO_PIPELINE_STATIC_ROOT }}'

  # ---
  # AWS Buckets, Prefixes
  # ---
  # Studio/Platform
  edx_s3_ingest_prefix: '{{ VIDEO_PIPELINE_EDX_S3_INGEST_PREFIX }}'
  edx_s3_ingest_bucket: '{{ VIDEO_PIPELINE_EDX_S3_INGEST_BUCKET }}'
  edx_s3_endpoint_bucket: '{{ VIDEO_PIPELINE_EDX_S3_ENDPOINT_BUCKET }}'

  # CF
  edx_cloudfront_prefix: '{{ VIDEO_PIPELINE_EDX_CLOUDFRONT_PREFIX }}'

  # Images
  aws_video_images_bucket: '{{ VIDEO_PIPELINE_AWS_VIDEO_IMAGES_BUCKET }}'
  aws_video_images_prefix: "video-images/"


  # VEDA Internal
  veda_s3_upload_bucket: '{{ VIDEO_PIPELINE_VEDA_S3_UPLOAD_BUCKET }}'
  veda_s3_hotstore_bucket: '{{ VIDEO_PIPELINE_VEDA_S3_HOTSTORE_BUCKET }}'
  veda_deliverable_bucket: '{{ VIDEO_PIPELINE_VEDA_DELIVERABLE_BUCKET }}'
  veda_upload_bucket: '{{ VIDEO_PIPELINE_VEDA_UPLOAD_BUCKET }}'
  # Settings
  multi_upload_barrier: 2000000000
  veda_base_url: '{{ VIDEO_PIPELINE_VEDA_BASE_URL }}'
  s3_base_url: https://s3.amazonaws.com


  # Transcripts
  aws_video_transcripts_bucket: '{{ VIDEO_PIPELINE_AWS_VIDEO_TRANSCRIPTS_BUCKET }}'
  aws_video_transcripts_prefix: video-transcripts/

  # cielo24 api urls
  cielo24_api_base_url: 'https://{{ VIDEO_PIPELINE_CIELO24_API_ENVIRONMENT }}.cielo24.com/api'

  # 3playmedia api urls
  three_play_api_base_url: https://api.3playmedia.com/
  three_play_api_transcript_url: https://static.3playmedia.com/

  # a token identifying a valid request from transcript provider
  transcript_provider_request_token: '{{ VIDEO_PIPELINE_TRANSCRIPT_PROVIDER_REQUEST_TOKEN }}'

  # Ingest Secret
  veda_secret_access_key: '{{ VIDEO_PIPELINE_VEDA_SECRET_ACCESS_KEY }}'
  veda_access_key_id: '{{ VIDEO_PIPELINE_VEDA_ACCESS_KEY_ID }}'

  # ---
  # email vars
  # ---
  veda_noreply_email: '{{ VIDEO_PIPELINE_VEDA_NOREPLY_EMAIL }}'
  admin_email: '{{ VIDEO_PIPELINE_ADMIN_EMAIL }}'

  # ---
  # VEDA API
  # ---
  ## VEDA API Auth
  veda_api_url: '{{ VIDEO_PIPELINE_VEDA_API_URL }}'
  veda_auth_url: '{{ VIDEO_PIPELINE_VEDA_AUTH_URL }}'
  veda_client_id: '{{ VIDEO_PIPELINE_VEDA_CLIENT_ID }}'
  veda_secret_key: '{{ VIDEO_PIPELINE_VEDA_SECRET_KEY }}'
  veda_token_url: '{{ VIDEO_PIPELINE_VEDA_TOKEN_URL }}'

  # ---
  # VAL
  # ---
  val_api_url: '{{ VIDEO_PIPELINE_VAL_API_URL }}'
  val_token_url: '{{ VIDEO_PIPELINE_VAL_TOKEN_URL }}'
  val_video_images_url: '{{ VIDEO_PIPELINE_VAL_VIDEO_IMAGES_URL }}'
  # Credentials
  val_client_id: '{{ VIDEO_PIPELINE_VAL_CLIENT_ID }}'
  val_secret_key: '{{ VIDEO_PIPELINE_VAL_SECRET_KEY }}'
  val_password: '{{ VIDEO_PIPELINE_VAL_PASSWORD }}'
  val_username: '{{ VIDEO_PIPELINE_VAL_USERNAME }}'
  val_transcript_create_url: '{{ VIDEO_PIPELINE_VAL_TRANSCRIPT_CREATE_URL }}'
  val_video_transcript_status_url: '{{ VIDEO_PIPELINE_VAL_VIDEO_TRANSCRIPT_STATUS_URL }}'

  # ---
  # Celery Info
  # ---
  celery_app_name: veda_production
  # can do multiple queues like so: foo,bar,baz
  main_celery_queue: encode_worker
  celery_receiver_queue: encode_worker
  largefile_celery_queue: large_encode_worker
  celery_stat_queue: transcode_stat
  largefile_queue_barrier: 1000000000
  celery_threads: 1

  rabbitmq_broker: '{{ VIDEO_PIPELINE_RABBITMQ_BROKER }}'
  rabbitmq_pass: '{{ VIDEO_PIPELINE_RABBITMQ_PASS }}'
  rabbitmq_user: '{{ VIDEO_PIPELINE_RABBITMQ_USER }}'

  # ---
  # Shotgun Variables (internal mediateam)
  # ---
  sg_server_path: '{{ VIDEO_PIPELINE_SG_SERVER_PATH }}'
  sg_script_name: '{{ VIDEO_PIPELINE_SG_SCRIPT_NAME }}'
  sg_script_key: '{{ VIDEO_PIPELINE_SG_SCRIPT_KEY }}'

  # ---
  # Endpoints
  # ---
  threeplay_ftphost: '{{ VIDEO_PIPELINE_THREEPLAY_FTPHOST }}'
  xuetang_api_url: '{{ VIDEO_PIPELINE_XUETANG_API_URL }}'
  xuetang_api_shared_secret: '{{ VIDEO_PIPELINE_XUETANG_API_SHARED_SECRET }}'

  ## Encoding Config
  ffmpeg_compiled: "ffmpeg"
  ffprobe_compiled: "ffprobe"
  target_aspect_ratio: 1.7777778

  # ----------
  ##---
  # This is a list of encodes and their respective course
  # boolean matches
  encode_dict:
      review_proc:
          - review
      mobile_override:
          - override
      s3_proc:
          - mobile_high
          - mobile_low
          - audio_mp3
          - desktop_webm
          - desktop_mp4
          - hls

      yt_proc:
          - youtube

  ##---
  # This is a list of encode profiles and their val profile matches
  # boolean matches
  val_profile_dict:
      mobile_low:
          - mobile_low

      desktop_mp4:
          - desktop_mp4

      override:
          - desktop_mp4
          - mobile_low
          - mobile_high

      mobile_high:
          - mobile_high

      audio_mp3:
          - audio_mp3

      desktop_webm:
          - desktop_webm

      youtube:
          - youtube
      review:
      hls:
          - hls

  #--
  # Heal settings
  heal_start: 1
  heal_end: 144

#####################################
